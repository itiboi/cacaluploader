#!/usr/bin/env python
# coding=utf-8

import caldav
import logging
import requests
from datetime import datetime

from cacaluploader import CampusCalendarUploader, CampusOfficeAuthorizationError, CalDAVUploadAdapter, \
    ExchangeUploadAdapter, CampusCalenderAdapter

log = logging.getLogger(__name__)

if __name__ == '__main__':
    # The script will try to load everything from a config file with following structure:
    # [CampusOffice]
    # mat=<matriculation number>
    # pass=<password>
    #
    # [Adapter]
    # target=caldav
    #
    # [CalDAV]
    # url=<calendar url>
    # username=<calendar username>
    # password=<password>
    #
    # and optional:
    # [Period]
    # start=<year-month-day>
    # end=<year-month-day>

    import sys
    import configparser

    # Set up logger
    logging.basicConfig(format='%(asctime)s %(levelname)s: %(name)s: %(message)s', level=logging.INFO,
                        datefmt='%Y-%m-%d %H:%M:%S')
    log = logging.getLogger('cacaluploader')

    # Parse command line
    if len(sys.argv) != 2:
        log.error('Error: Incorrect use!')
        log.info(' cacaluploader <config-file>')
        exit()
    config_file = sys.argv[1]

    try:
        # Parse config file
        config = configparser.ConfigParser()
        config.read(config_file)

        # Parse source
        mat_number = config.get('CampusOffice', 'mat')
        campus_pass = config.get('CampusOffice', 'pass')

        start_time = None
        end_time = None
        if config.has_section('Period'):
            start_time = datetime.strptime(config.get('Period', 'start'), '%Y-%m-%d')
            end_time = datetime.strptime(config.get('Period', 'end'), '%Y-%m-%d')

        source_adapter = CampusCalenderAdapter(mat_number, campus_pass)

        # Parse upload calendar
        target = config.get('Adapter', 'target')

        if target == 'caldav':
            url = config.get('CalDAV', 'url')
            username = config.get('CalDAV', 'username')
            password = config.get('CalDAV', 'password')
            upload_adapter = CalDAVUploadAdapter(url, username, password)
        elif target == 'exchange':
            ews_url = config.get('Exchange', 'ews_url')
            calendar_id = config.get('Exchange', 'calendar_id', fallback=None)
            username = config.get('Exchange', 'username')
            password = config.get('Exchange', 'password')

            if calendar_id is None:
                upload_adapter = ExchangeUploadAdapter(ews_url, username, password)
            else:
                upload_adapter = ExchangeUploadAdapter(ews_url, username, password, calendar_id)
        else:
            raise RuntimeError('Unknown adapter!')

        # Start upload
        uploader = CampusCalendarUploader(source_adapter, upload_adapter)
        uploader.upload()
    except configparser.NoOptionError as e:
        log.error('Could not load config from file: %s', e)
    except (requests.RequestException, CampusOfficeAuthorizationError) as e:
        log.error('Could not retrieve CampusOffice calendar: %s', e)
    except caldav.error.AuthorizationError as e:
        log.error('Could not access CalDAV calendar: Authorization failed')
    except caldav.error.NotFoundError as e:
        log.error('Could not find CalDAV calendar')
    except caldav.error.ReportError as e:
        log.error('Could not retrieve list of already existing events in CalDAV calendar')
    except caldav.error.DeleteError as e:
        log.error('Could not remove already existing event in CalDAV calendar')
    except caldav.error.PutError as e:
        log.error('Could not upload new event to CalDAV calendar')
    # Maybe catch many other things too :(
    except ValueError as e:
        log.error('Could not parse time period: %s', e)
